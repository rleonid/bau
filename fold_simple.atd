src/scripts/fold_simple.ml
==>
[{pstr_desc =
   Pstr_open {popen_lid = {txt = Lident "Bigarray"}; popen_override = Fresh}};
 {pstr_desc =
   Pstr_value (Nonrecursive,
    [{pvb_pat = {ppat_desc = Ppat_var {txt = "fold_left"}};
      pvb_expr =
       {pexp_desc =
         Pexp_newtype ("l",
          {pexp_desc =
            Pexp_fun ("", None, {ppat_desc = Ppat_var {txt = "f"}},
             {pexp_desc =
               Pexp_fun ("", None, {ppat_desc = Ppat_var {txt = "i"}},
                {pexp_desc =
                  Pexp_fun ("", None,
                   {ppat_desc =
                     Ppat_constraint ({ppat_desc = Ppat_var {txt = "v"}},
                      {ptyp_desc =
                        Ptyp_constr ({txt = Ldot (Lident "Array1", "t")},
                         [{ptyp_desc =
                            Ptyp_constr ({txt = Lident "float"}, [])};
                          {ptyp_desc =
                            Ptyp_constr ({txt = Lident "float64_elt"}, [])};
                          {ptyp_desc = Ptyp_constr ({txt = Lident "l"}, [])}])})},
                   {pexp_desc =
                     Pexp_let (Nonrecursive,
                      [{pvb_pat =
                         {ppat_desc = Ppat_var {txt = "fold_left_fortran"}};
                        pvb_expr =
                         {pexp_desc =
                           Pexp_fun ("", None,
                            {ppat_desc =
                              Ppat_constraint
                               ({ppat_desc = Ppat_var {txt = "a"}},
                               {ptyp_desc =
                                 Ptyp_constr
                                  ({txt = Ldot (Lident "Array1", "t")},
                                  [{ptyp_desc =
                                     Ptyp_constr ({txt = Lident "float"}, [])};
                                   {ptyp_desc =
                                     Ptyp_constr ({txt = Lident "float64_elt"}, [])};
                                   {ptyp_desc = Ptyp_constr ({txt = Lident "fortran_layout"}, [])}])})},
                            {pexp_desc =
                              Pexp_let (Nonrecursive,
                               [{pvb_pat = {ppat_desc = Ppat_var {txt = "r"}};
                                 pvb_expr =
                                  {pexp_desc =
                                    Pexp_apply
                                     ({pexp_desc =
                                        Pexp_ident {txt = Lident "ref"}},
                                     [("",
                                       {pexp_desc =
                                         Pexp_ident {txt = Lident "i"}})])}}],
                               {pexp_desc =
                                 Pexp_sequence
                                  ({pexp_desc =
                                     Pexp_for
                                      ({ppat_desc = Ppat_var {txt = "i"}},
                                      {pexp_desc =
                                        Pexp_constant (Const_int 1)},
                                      {pexp_desc =
                                        Pexp_apply
                                         ({pexp_desc =
                                            Pexp_ident
                                             {txt =
                                               Ldot (Lident "Array1", "dim")}},
                                         [("",
                                           {pexp_desc =
                                             Pexp_ident {txt = Lident "a"}})])},
                                      Upto,
                                      {pexp_desc =
                                        Pexp_apply
                                         ({pexp_desc =
                                            Pexp_ident {txt = Lident ":="}},
                                         [("",
                                           {pexp_desc =
                                             Pexp_ident {txt = Lident "r"}});
                                          ("",
                                           {pexp_desc =
                                             Pexp_apply
                                              ({pexp_desc =
                                                 Pexp_ident
                                                  {txt = Lident "f"}},
                                              [("",
                                                {pexp_desc =
                                                  Pexp_apply
                                                   ({pexp_desc =
                                                      Pexp_ident
                                                       {txt = Lident "!"}},
                                                   [("",
                                                     {pexp_desc =
                                                       Pexp_ident
                                                        {txt = Lident "r"}})])});
                                               ("",
                                                {pexp_desc =
                                                  Pexp_apply
                                                   ({pexp_desc =
                                                      Pexp_ident
                                                       {txt =
                                                         Ldot
                                                          (Lident "Array1",
                                                          "unsafe_get")}},
                                                   [("",
                                                     {pexp_desc =
                                                       Pexp_ident
                                                        {txt = Lident "a"}});
                                                    ("",
                                                     {pexp_desc =
                                                       Pexp_ident
                                                        {txt = Lident "i"}})])})])})])})},
                                  {pexp_desc =
                                    Pexp_apply
                                     ({pexp_desc =
                                        Pexp_ident {txt = Lident "!"}},
                                     [("",
                                       {pexp_desc =
                                         Pexp_ident {txt = Lident "r"}})])})})})}}],
                      {pexp_desc =
                        Pexp_let (Nonrecursive,
                         [{pvb_pat =
                            {ppat_desc = Ppat_var {txt = "fold_left_c"}};
                           pvb_expr =
                            {pexp_desc =
                              Pexp_fun ("", None,
                               {ppat_desc =
                                 Ppat_constraint
                                  ({ppat_desc = Ppat_var {txt = "a"}},
                                  {ptyp_desc =
                                    Ptyp_constr
                                     ({txt = Ldot (Lident "Array1", "t")},
                                     [{ptyp_desc =
                                        Ptyp_constr ({txt = Lident "float"},
                                         [])};
                                      {ptyp_desc =
                                        Ptyp_constr
                                         ({txt = Lident "float64_elt"}, 
                                         [])};
                                      {ptyp_desc =
                                        Ptyp_constr
                                         ({txt = Lident "c_layout"}, 
                                         [])}])})},
                               {pexp_desc =
                                 Pexp_let (Nonrecursive,
                                  [{pvb_pat =
                                     {ppat_desc = Ppat_var {txt = "r"}};
                                    pvb_expr =
                                     {pexp_desc =
                                       Pexp_apply
                                        ({pexp_desc =
                                           Pexp_ident {txt = Lident "ref"}},
                                        [("",
                                          {pexp_desc =
                                            Pexp_ident {txt = Lident "i"}})])}}],
                                  {pexp_desc =
                                    Pexp_sequence
                                     ({pexp_desc =
                                        Pexp_for
                                         ({ppat_desc = Ppat_var {txt = "i"}},
                                         {pexp_desc =
                                           Pexp_constant (Const_int 0)},
                                         {pexp_desc =
                                           Pexp_apply
                                            ({pexp_desc =
                                               Pexp_ident {txt = Lident "-"}},
                                            [("",
                                              {pexp_desc =
                                                Pexp_apply
                                                 ({pexp_desc =
                                                    Pexp_ident
                                                     {txt =
                                                       Ldot (Lident "Array1",
                                                        "dim")}},
                                                 [("",
                                                   {pexp_desc =
                                                     Pexp_ident
                                                      {txt = Lident "a"}})])});
                                             ("",
                                              {pexp_desc =
                                                Pexp_constant (Const_int 1)})])},
                                         Upto,
                                         {pexp_desc =
                                           Pexp_apply
                                            ({pexp_desc =
                                               Pexp_ident {txt = Lident ":="}},
                                            [("",
                                              {pexp_desc =
                                                Pexp_ident {txt = Lident "r"}});
                                             ("",
                                              {pexp_desc =
                                                Pexp_apply
                                                 ({pexp_desc =
                                                    Pexp_ident
                                                     {txt = Lident "f"}},
                                                 [("",
                                                   {pexp_desc =
                                                     Pexp_apply
                                                      ({pexp_desc =
                                                         Pexp_ident
                                                          {txt = Lident "!"}},
                                                      [("",
                                                        {pexp_desc =
                                                          Pexp_ident
                                                           {txt = Lident "r"}})])});
                                                  ("",
                                                   {pexp_desc =
                                                     Pexp_apply
                                                      ({pexp_desc =
                                                         Pexp_ident
                                                          {txt =
                                                            Ldot
                                                             (Lident "Array1",
                                                             "unsafe_get")}},
                                                      [("",
                                                        {pexp_desc =
                                                          Pexp_ident
                                                           {txt = Lident "a"}});
                                                       ("",
                                                        {pexp_desc =
                                                          Pexp_ident
                                                           {txt = Lident "i"}})])})])})])})},
                                     {pexp_desc =
                                       Pexp_apply
                                        ({pexp_desc =
                                           Pexp_ident {txt = Lident "!"}},
                                        [("",
                                          {pexp_desc =
                                            Pexp_ident {txt = Lident "r"}})])})})})}}],
                         {pexp_desc =
                           Pexp_match
                            ({pexp_desc =
                               Pexp_apply
                                ({pexp_desc =
                                   Pexp_ident
                                    {txt = Ldot (Lident "Array1", "layout")}},
                                [("",
                                  {pexp_desc = Pexp_ident {txt = Lident "v"}})])},
                            [{pc_lhs =
                               {ppat_desc =
                                 Ppat_construct
                                  ({txt = Lident "Fortran_layout"}, None)};
                              pc_guard = None;
                              pc_rhs =
                               {pexp_desc =
                                 Pexp_apply
                                  ({pexp_desc =
                                     Pexp_ident
                                      {txt = Lident "fold_left_fortran"}},
                                  [("",
                                    {pexp_desc =
                                      Pexp_ident {txt = Lident "v"}})])}};
                             {pc_lhs =
                               {ppat_desc =
                                 Ppat_construct ({txt = Lident "C_layout"},
                                  None)};
                              pc_guard = None;
                              pc_rhs =
                               {pexp_desc =
                                 Pexp_apply
                                  ({pexp_desc =
                                     Pexp_ident {txt = Lident "fold_left_c"}},
                                  [("",
                                    {pexp_desc =
                                      Pexp_ident {txt = Lident "v"}})])}}])}
                                 )})})})})})}}])}]
=========
